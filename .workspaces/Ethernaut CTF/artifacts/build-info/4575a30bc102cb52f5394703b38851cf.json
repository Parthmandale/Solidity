{
	"id": "4575a30bc102cb52f5394703b38851cf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"coinFlip.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract CoinFlip {\n\n  uint256 public consecutiveWins;\n  uint256 lastHash;\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n   uint256 public  blockValue;\n  constructor() {\n    consecutiveWins = 0;\n  }\n\n  function flip(bool _guess) public returns (bool) {\n    blockValue = uint256(blockhash(block.number - 1));\n\n// 0 == blockValue -> this wont happen ever\n    if (lastHash == blockValue) {\n      revert();\n    }\n\n    lastHash = blockValue;\n    uint256 coinFlip = blockValue / FACTOR;\n    bool side = coinFlip == 1 ? true : false;\n\n    if (side == _guess) {\n      consecutiveWins++;\n      return true;\n    } else {\n      consecutiveWins = 0;\n      return false;\n    }\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"coinFlip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "blockValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"coinFlip.sol\":57:778  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"coinFlip.sol\":151:228  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"coinFlip.sol\":134:228  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"coinFlip.sol\":263:307  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"coinFlip.sol\":301:302  0 */\n  0x00\n    /* \"coinFlip.sol\":283:298  consecutiveWins */\n  dup1\n    /* \"coinFlip.sol\":283:302  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"coinFlip.sol\":57:778  contract CoinFlip {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"coinFlip.sol\":57:778  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf852be69\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"coinFlip.sol\":311:776  function flip(bool _guess) public returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"coinFlip.sol\":80:110  uint256 public consecutiveWins */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"coinFlip.sol\":233:259  uint256 public  blockValue */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"coinFlip.sol\":311:776  function flip(bool _guess) public returns (bool) {... */\n    tag_9:\n        /* \"coinFlip.sol\":354:358  bool */\n      0x00\n        /* \"coinFlip.sol\":412:413  1 */\n      0x01\n        /* \"coinFlip.sol\":397:409  block.number */\n      number\n        /* \"coinFlip.sol\":397:413  block.number - 1 */\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"coinFlip.sol\":387:414  blockhash(block.number - 1) */\n      blockhash\n        /* \"coinFlip.sol\":379:415  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"coinFlip.sol\":366:376  blockValue */\n      0x03\n        /* \"coinFlip.sol\":366:415  blockValue = uint256(blockhash(block.number - 1)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"coinFlip.sol\":482:492  blockValue */\n      sload(0x03)\n        /* \"coinFlip.sol\":470:478  lastHash */\n      sload(0x01)\n        /* \"coinFlip.sol\":470:492  lastHash == blockValue */\n      sub\n        /* \"coinFlip.sol\":466:517  if (lastHash == blockValue) {... */\n      tag_22\n      jumpi\n        /* \"coinFlip.sol\":502:510  revert() */\n      0x00\n      dup1\n      revert\n        /* \"coinFlip.sol\":466:517  if (lastHash == blockValue) {... */\n    tag_22:\n        /* \"coinFlip.sol\":534:544  blockValue */\n      sload(0x03)\n        /* \"coinFlip.sol\":523:531  lastHash */\n      0x01\n        /* \"coinFlip.sol\":523:544  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"coinFlip.sol\":550:566  uint256 coinFlip */\n      0x00\n        /* \"coinFlip.sol\":582:588  FACTOR */\n      sload(0x02)\n        /* \"coinFlip.sol\":569:579  blockValue */\n      sload(0x03)\n        /* \"coinFlip.sol\":569:588  blockValue / FACTOR */\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"coinFlip.sol\":550:588  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"coinFlip.sol\":594:603  bool side */\n      0x00\n        /* \"coinFlip.sol\":618:619  1 */\n      0x01\n        /* \"coinFlip.sol\":606:614  coinFlip */\n      dup3\n        /* \"coinFlip.sol\":606:619  coinFlip == 1 */\n      eq\n        /* \"coinFlip.sol\":606:634  coinFlip == 1 ? true : false */\n      tag_25\n      jumpi\n        /* \"coinFlip.sol\":629:634  false */\n      0x00\n        /* \"coinFlip.sol\":606:634  coinFlip == 1 ? true : false */\n      jump(tag_26)\n    tag_25:\n        /* \"coinFlip.sol\":622:626  true */\n      0x01\n        /* \"coinFlip.sol\":606:634  coinFlip == 1 ? true : false */\n    tag_26:\n        /* \"coinFlip.sol\":594:634  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"coinFlip.sol\":653:659  _guess */\n      dup4\n        /* \"coinFlip.sol\":645:659  side == _guess */\n      iszero\n      iszero\n        /* \"coinFlip.sol\":645:649  side */\n      dup2\n        /* \"coinFlip.sol\":645:659  side == _guess */\n      iszero\n      iszero\n      sub\n        /* \"coinFlip.sol\":641:772  if (side == _guess) {... */\n      tag_27\n      jumpi\n        /* \"coinFlip.sol\":669:684  consecutiveWins */\n      0x00\n      dup1\n        /* \"coinFlip.sol\":669:686  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"coinFlip.sol\":701:705  true */\n      0x01\n        /* \"coinFlip.sol\":694:705  return true */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_19)\n        /* \"coinFlip.sol\":641:772  if (side == _guess) {... */\n    tag_27:\n        /* \"coinFlip.sol\":744:745  0 */\n      0x00\n        /* \"coinFlip.sol\":726:741  consecutiveWins */\n      dup1\n        /* \"coinFlip.sol\":726:745  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"coinFlip.sol\":760:765  false */\n      0x00\n        /* \"coinFlip.sol\":753:765  return false */\n      swap3\n      pop\n      pop\n      pop\n        /* \"coinFlip.sol\":311:776  function flip(bool _guess) public returns (bool) {... */\n    tag_19:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"coinFlip.sol\":80:110  uint256 public consecutiveWins */\n    tag_13:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"coinFlip.sol\":233:259  uint256 public  blockValue */\n    tag_17:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_32:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:424   */\n    tag_34:\n        /* \"#utility.yul\":368:375   */\n      0x00\n        /* \"#utility.yul\":411:416   */\n      dup2\n        /* \"#utility.yul\":404:417   */\n      iszero\n        /* \"#utility.yul\":397:418   */\n      iszero\n        /* \"#utility.yul\":386:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":430:546   */\n    tag_35:\n        /* \"#utility.yul\":500:521   */\n      tag_48\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":500:521   */\n      tag_34\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":493:498   */\n      dup2\n        /* \"#utility.yul\":490:522   */\n      eq\n        /* \"#utility.yul\":480:540   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      dup1\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":480:540   */\n    tag_49:\n        /* \"#utility.yul\":430:546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:685   */\n    tag_36:\n        /* \"#utility.yul\":595:600   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":620:640   */\n      calldataload\n        /* \"#utility.yul\":611:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:679   */\n      tag_51\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":649:679   */\n      tag_35\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":552:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1014   */\n    tag_8:\n        /* \"#utility.yul\":747:753   */\n      0x00\n        /* \"#utility.yul\":796:798   */\n      0x20\n        /* \"#utility.yul\":784:793   */\n      dup3\n        /* \"#utility.yul\":775:782   */\n      dup5\n        /* \"#utility.yul\":771:794   */\n      sub\n        /* \"#utility.yul\":767:799   */\n      slt\n        /* \"#utility.yul\":764:883   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":802:881   */\n      tag_54\n      tag_32\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":764:883   */\n    tag_53:\n        /* \"#utility.yul\":922:923   */\n      0x00\n        /* \"#utility.yul\":947:997   */\n      tag_55\n        /* \"#utility.yul\":989:996   */\n      dup5\n        /* \"#utility.yul\":980:986   */\n      dup3\n        /* \"#utility.yul\":969:978   */\n      dup6\n        /* \"#utility.yul\":965:987   */\n      add\n        /* \"#utility.yul\":947:997   */\n      tag_36\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":937:997   */\n      swap2\n      pop\n        /* \"#utility.yul\":893:1007   */\n      pop\n        /* \"#utility.yul\":691:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1020:1129   */\n    tag_37:\n        /* \"#utility.yul\":1101:1122   */\n      tag_57\n        /* \"#utility.yul\":1116:1121   */\n      dup2\n        /* \"#utility.yul\":1101:1122   */\n      tag_34\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1096:1099   */\n      dup3\n        /* \"#utility.yul\":1089:1123   */\n      mstore\n        /* \"#utility.yul\":1020:1129   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1135:1345   */\n    tag_11:\n        /* \"#utility.yul\":1222:1226   */\n      0x00\n        /* \"#utility.yul\":1260:1262   */\n      0x20\n        /* \"#utility.yul\":1249:1258   */\n      dup3\n        /* \"#utility.yul\":1245:1263   */\n      add\n        /* \"#utility.yul\":1237:1263   */\n      swap1\n      pop\n        /* \"#utility.yul\":1273:1338   */\n      tag_59\n        /* \"#utility.yul\":1335:1336   */\n      0x00\n        /* \"#utility.yul\":1324:1333   */\n      dup4\n        /* \"#utility.yul\":1320:1337   */\n      add\n        /* \"#utility.yul\":1311:1317   */\n      dup5\n        /* \"#utility.yul\":1273:1338   */\n      tag_37\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1135:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1351:1428   */\n    tag_38:\n        /* \"#utility.yul\":1388:1395   */\n      0x00\n        /* \"#utility.yul\":1417:1422   */\n      dup2\n        /* \"#utility.yul\":1406:1422   */\n      swap1\n      pop\n        /* \"#utility.yul\":1351:1428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1434:1552   */\n    tag_39:\n        /* \"#utility.yul\":1521:1545   */\n      tag_62\n        /* \"#utility.yul\":1539:1544   */\n      dup2\n        /* \"#utility.yul\":1521:1545   */\n      tag_38\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1516:1519   */\n      dup3\n        /* \"#utility.yul\":1509:1546   */\n      mstore\n        /* \"#utility.yul\":1434:1552   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1558:1780   */\n    tag_15:\n        /* \"#utility.yul\":1651:1655   */\n      0x00\n        /* \"#utility.yul\":1689:1691   */\n      0x20\n        /* \"#utility.yul\":1678:1687   */\n      dup3\n        /* \"#utility.yul\":1674:1692   */\n      add\n        /* \"#utility.yul\":1666:1692   */\n      swap1\n      pop\n        /* \"#utility.yul\":1702:1773   */\n      tag_64\n        /* \"#utility.yul\":1770:1771   */\n      0x00\n        /* \"#utility.yul\":1759:1768   */\n      dup4\n        /* \"#utility.yul\":1755:1772   */\n      add\n        /* \"#utility.yul\":1746:1752   */\n      dup5\n        /* \"#utility.yul\":1702:1773   */\n      tag_39\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1558:1780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1786:1966   */\n    tag_40:\n        /* \"#utility.yul\":1834:1911   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1831:1832   */\n      0x00\n        /* \"#utility.yul\":1824:1912   */\n      mstore\n        /* \"#utility.yul\":1931:1935   */\n      0x11\n        /* \"#utility.yul\":1928:1929   */\n      0x04\n        /* \"#utility.yul\":1921:1936   */\n      mstore\n        /* \"#utility.yul\":1955:1959   */\n      0x24\n        /* \"#utility.yul\":1952:1953   */\n      0x00\n        /* \"#utility.yul\":1945:1960   */\n      revert\n        /* \"#utility.yul\":1972:2166   */\n    tag_21:\n        /* \"#utility.yul\":2012:2016   */\n      0x00\n        /* \"#utility.yul\":2032:2052   */\n      tag_67\n        /* \"#utility.yul\":2050:2051   */\n      dup3\n        /* \"#utility.yul\":2032:2052   */\n      tag_38\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2027:2052   */\n      swap2\n      pop\n        /* \"#utility.yul\":2066:2086   */\n      tag_68\n        /* \"#utility.yul\":2084:2085   */\n      dup4\n        /* \"#utility.yul\":2066:2086   */\n      tag_38\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2061:2086   */\n      swap3\n      pop\n        /* \"#utility.yul\":2110:2111   */\n      dup3\n        /* \"#utility.yul\":2107:2108   */\n      dup3\n        /* \"#utility.yul\":2103:2112   */\n      sub\n        /* \"#utility.yul\":2095:2112   */\n      swap1\n      pop\n        /* \"#utility.yul\":2134:2135   */\n      dup2\n        /* \"#utility.yul\":2128:2132   */\n      dup2\n        /* \"#utility.yul\":2125:2136   */\n      gt\n        /* \"#utility.yul\":2122:2159   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":2139:2157   */\n      tag_70\n      tag_40\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2122:2159   */\n    tag_69:\n        /* \"#utility.yul\":1972:2166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2172:2352   */\n    tag_41:\n        /* \"#utility.yul\":2220:2297   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2217:2218   */\n      0x00\n        /* \"#utility.yul\":2210:2298   */\n      mstore\n        /* \"#utility.yul\":2317:2321   */\n      0x12\n        /* \"#utility.yul\":2314:2315   */\n      0x04\n        /* \"#utility.yul\":2307:2322   */\n      mstore\n        /* \"#utility.yul\":2341:2345   */\n      0x24\n        /* \"#utility.yul\":2338:2339   */\n      0x00\n        /* \"#utility.yul\":2331:2346   */\n      revert\n        /* \"#utility.yul\":2358:2543   */\n    tag_24:\n        /* \"#utility.yul\":2398:2399   */\n      0x00\n        /* \"#utility.yul\":2415:2435   */\n      tag_73\n        /* \"#utility.yul\":2433:2434   */\n      dup3\n        /* \"#utility.yul\":2415:2435   */\n      tag_38\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2410:2435   */\n      swap2\n      pop\n        /* \"#utility.yul\":2449:2469   */\n      tag_74\n        /* \"#utility.yul\":2467:2468   */\n      dup4\n        /* \"#utility.yul\":2449:2469   */\n      tag_38\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2444:2469   */\n      swap3\n      pop\n        /* \"#utility.yul\":2488:2489   */\n      dup3\n        /* \"#utility.yul\":2478:2513   */\n      tag_75\n      jumpi\n        /* \"#utility.yul\":2493:2511   */\n      tag_76\n      tag_41\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2478:2513   */\n    tag_75:\n        /* \"#utility.yul\":2535:2536   */\n      dup3\n        /* \"#utility.yul\":2532:2533   */\n      dup3\n        /* \"#utility.yul\":2528:2537   */\n      div\n        /* \"#utility.yul\":2523:2537   */\n      swap1\n      pop\n        /* \"#utility.yul\":2358:2543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2549:2782   */\n    tag_29:\n        /* \"#utility.yul\":2588:2591   */\n      0x00\n        /* \"#utility.yul\":2611:2635   */\n      tag_78\n        /* \"#utility.yul\":2629:2634   */\n      dup3\n        /* \"#utility.yul\":2611:2635   */\n      tag_38\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2602:2635   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2723   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2650:2655   */\n      dup3\n        /* \"#utility.yul\":2647:2724   */\n      sub\n        /* \"#utility.yul\":2644:2747   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":2727:2745   */\n      tag_80\n      tag_40\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2644:2747   */\n    tag_79:\n        /* \"#utility.yul\":2774:2775   */\n      0x01\n        /* \"#utility.yul\":2767:2772   */\n      dup3\n        /* \"#utility.yul\":2763:2776   */\n      add\n        /* \"#utility.yul\":2756:2776   */\n      swap1\n      pop\n        /* \"#utility.yul\":2549:2782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c2278a291ea7d4b55f1178933139dd657ec183c5eb1908b762080ed2809d59b964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b50600080819055506103638061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631d263f6714610046578063e6f334d714610076578063f852be6914610094575b600080fd5b610060600480360381019061005b9190610197565b6100b2565b60405161006d91906101d3565b60405180910390f35b61007e61014e565b60405161008b9190610207565b60405180910390f35b61009c610154565b6040516100a99190610207565b60405180910390f35b60006001436100c19190610251565b4060001c600381905550600354600154036100db57600080fd5b60035460018190555060006002546003546100f691906102b4565b905060006001821461010957600061010c565b60015b90508315158115150361013b5760008081548092919061012b906102e5565b9190505550600192505050610149565b600080819055506000925050505b919050565b60005481565b60035481565b600080fd5b60008115159050919050565b6101748161015f565b811461017f57600080fd5b50565b6000813590506101918161016b565b92915050565b6000602082840312156101ad576101ac61015a565b5b60006101bb84828501610182565b91505092915050565b6101cd8161015f565b82525050565b60006020820190506101e860008301846101c4565b92915050565b6000819050919050565b610201816101ee565b82525050565b600060208201905061021c60008301846101f8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061025c826101ee565b9150610267836101ee565b925082820390508181111561027f5761027e610222565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006102bf826101ee565b91506102ca836101ee565b9250826102da576102d9610285565b5b828204905092915050565b60006102f0826101ee565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361032257610321610222565b5b60018201905091905056fea2646970667358221220c2278a291ea7d4b55f1178933139dd657ec183c5eb1908b762080ed2809d59b964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x363 DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF852BE69 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x197 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x154 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x251 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD SUB PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x2B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x109 JUMPI PUSH1 0x0 PUSH2 0x10C JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP4 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x12B SWAP1 PUSH2 0x2E5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x149 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174 DUP2 PUSH2 0x15F JUMP JUMPDEST DUP2 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x191 DUP2 PUSH2 0x16B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD JUMPI PUSH2 0x1AC PUSH2 0x15A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BB DUP5 DUP3 DUP6 ADD PUSH2 0x182 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CD DUP2 PUSH2 0x15F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x201 DUP2 PUSH2 0x1EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25C DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP2 POP PUSH2 0x267 DUP4 PUSH2 0x1EE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x27F JUMPI PUSH2 0x27E PUSH2 0x222 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BF DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA DUP4 PUSH2 0x1EE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2DA JUMPI PUSH2 0x2D9 PUSH2 0x285 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0 DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x322 JUMPI PUSH2 0x321 PUSH2 0x222 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0x27 DUP11 0x29 0x1E 0xA7 0xD4 0xB5 0x5F GT PUSH25 0x933139DD657EC183C5EB1908B762080ED2809D59B964736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "57:721:0:-:0;;;151:77;134:94;;263:44;;;;;;;;;;301:1;283:15;:19;;;;57:721;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@blockValue_10": {
									"entryPoint": 340,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@consecutiveWins_3": {
									"entryPoint": 334,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@flip_82": {
									"entryPoint": 178,
									"id": 82,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2785:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "376:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "386:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "411:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "404:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "404:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "386:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "358:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "368:7:1",
														"type": ""
													}
												],
												"src": "334:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "524:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "533:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "536:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "526:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "526:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "493:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "515:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "500:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "500:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "490:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "490:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "483:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:40:1"
															},
															"nodeType": "YulIf",
															"src": "480:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"src": "430:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "601:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "611:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "620:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "649:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "579:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "587:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "595:5:1",
														"type": ""
													}
												],
												"src": "552:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "754:260:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "800:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "802:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "802:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "802:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "775:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "784:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "771:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "771:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "796:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:32:1"
															},
															"nodeType": "YulIf",
															"src": "764:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "893:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "908:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "922:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "912:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "937:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "969:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "980:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "965:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "965:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "989:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "947:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "947:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "937:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "724:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "735:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "747:6:1",
														"type": ""
													}
												],
												"src": "691:323:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1096:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1116:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1101:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1089:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1089:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1067:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1074:3:1",
														"type": ""
													}
												],
												"src": "1020:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1227:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1237:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1245:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1237:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1311:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1335:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1320:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1273:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1273:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1273:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1199:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1211:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1222:4:1",
														"type": ""
													}
												],
												"src": "1135:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1396:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1406:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1417:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1406:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1378:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1388:7:1",
														"type": ""
													}
												],
												"src": "1351:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1499:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1516:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1539:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1521:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1509:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1509:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1487:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1494:3:1",
														"type": ""
													}
												],
												"src": "1434:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1656:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1666:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1678:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1674:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1666:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1746:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1770:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1755:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1755:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1702:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1702:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1628:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1640:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1651:4:1",
														"type": ""
													}
												],
												"src": "1558:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1814:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1831:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1834:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1824:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1824:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1931:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1921:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1921:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1952:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1955:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1945:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1786:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2017:149:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2027:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2050:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2032:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2027:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2061:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2084:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2066:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2066:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2061:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2095:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2107:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2110:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2103:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2103:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2095:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2137:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2139:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2139:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2128:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2134:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2125:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2125:11:1"
															},
															"nodeType": "YulIf",
															"src": "2122:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2003:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2006:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2012:4:1",
														"type": ""
													}
												],
												"src": "1972:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2200:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2210:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2210:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2314:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2317:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2307:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2338:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2341:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2331:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2331:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2172:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2400:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2410:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2433:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2415:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2410:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2444:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2467:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2449:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2444:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2491:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2493:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2493:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2493:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2488:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2481:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2481:9:1"
															},
															"nodeType": "YulIf",
															"src": "2478:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2523:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2532:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2535:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2528:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2523:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2389:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2392:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2398:1:1",
														"type": ""
													}
												],
												"src": "2358:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2592:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2602:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2629:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2611:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2602:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2725:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2727:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2727:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2727:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2650:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2657:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2647:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2647:77:1"
															},
															"nodeType": "YulIf",
															"src": "2644:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2756:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2767:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2774:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2763:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2756:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2578:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2588:3:1",
														"type": ""
													}
												],
												"src": "2549:233:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80631d263f6714610046578063e6f334d714610076578063f852be6914610094575b600080fd5b610060600480360381019061005b9190610197565b6100b2565b60405161006d91906101d3565b60405180910390f35b61007e61014e565b60405161008b9190610207565b60405180910390f35b61009c610154565b6040516100a99190610207565b60405180910390f35b60006001436100c19190610251565b4060001c600381905550600354600154036100db57600080fd5b60035460018190555060006002546003546100f691906102b4565b905060006001821461010957600061010c565b60015b90508315158115150361013b5760008081548092919061012b906102e5565b9190505550600192505050610149565b600080819055506000925050505b919050565b60005481565b60035481565b600080fd5b60008115159050919050565b6101748161015f565b811461017f57600080fd5b50565b6000813590506101918161016b565b92915050565b6000602082840312156101ad576101ac61015a565b5b60006101bb84828501610182565b91505092915050565b6101cd8161015f565b82525050565b60006020820190506101e860008301846101c4565b92915050565b6000819050919050565b610201816101ee565b82525050565b600060208201905061021c60008301846101f8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061025c826101ee565b9150610267836101ee565b925082820390508181111561027f5761027e610222565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006102bf826101ee565b91506102ca836101ee565b9250826102da576102d9610285565b5b828204905092915050565b60006102f0826101ee565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361032257610321610222565b5b60018201905091905056fea2646970667358221220c2278a291ea7d4b55f1178933139dd657ec183c5eb1908b762080ed2809d59b964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF852BE69 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x197 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x154 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x251 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD SUB PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x2B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x109 JUMPI PUSH1 0x0 PUSH2 0x10C JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP4 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x12B SWAP1 PUSH2 0x2E5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x149 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174 DUP2 PUSH2 0x15F JUMP JUMPDEST DUP2 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x191 DUP2 PUSH2 0x16B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD JUMPI PUSH2 0x1AC PUSH2 0x15A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BB DUP5 DUP3 DUP6 ADD PUSH2 0x182 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CD DUP2 PUSH2 0x15F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x201 DUP2 PUSH2 0x1EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25C DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP2 POP PUSH2 0x267 DUP4 PUSH2 0x1EE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x27F JUMPI PUSH2 0x27E PUSH2 0x222 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BF DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA DUP4 PUSH2 0x1EE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2DA JUMPI PUSH2 0x2D9 PUSH2 0x285 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0 DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x322 JUMPI PUSH2 0x321 PUSH2 0x222 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0x27 DUP11 0x29 0x1E 0xA7 0xD4 0xB5 0x5F GT PUSH25 0x933139DD657EC183C5EB1908B762080ED2809D59B964736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "57:721:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;311:465;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;80:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;233:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;311:465;354:4;412:1;397:12;:16;;;;:::i;:::-;387:27;379:36;;366:10;:49;;;;482:10;;470:8;;:22;466:51;;502:8;;;466:51;534:10;;523:8;:21;;;;550:16;582:6;;569:10;;:19;;;;:::i;:::-;550:38;;594:9;618:1;606:8;:13;:28;;629:5;606:28;;;622:4;606:28;594:40;;653:6;645:14;;:4;:14;;;641:131;;669:15;;:17;;;;;;;;;:::i;:::-;;;;;;701:4;694:11;;;;;;641:131;744:1;726:15;:19;;;;760:5;753:12;;;;311:465;;;;:::o;80:30::-;;;;:::o;233:26::-;;;;:::o;88:117:1:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:323::-;747:6;796:2;784:9;775:7;771:23;767:32;764:119;;;802:79;;:::i;:::-;764:119;922:1;947:50;989:7;980:6;969:9;965:22;947:50;:::i;:::-;937:60;;893:114;691:323;;;;:::o;1020:109::-;1101:21;1116:5;1101:21;:::i;:::-;1096:3;1089:34;1020:109;;:::o;1135:210::-;1222:4;1260:2;1249:9;1245:18;1237:26;;1273:65;1335:1;1324:9;1320:17;1311:6;1273:65;:::i;:::-;1135:210;;;;:::o;1351:77::-;1388:7;1417:5;1406:16;;1351:77;;;:::o;1434:118::-;1521:24;1539:5;1521:24;:::i;:::-;1516:3;1509:37;1434:118;;:::o;1558:222::-;1651:4;1689:2;1678:9;1674:18;1666:26;;1702:71;1770:1;1759:9;1755:17;1746:6;1702:71;:::i;:::-;1558:222;;;;:::o;1786:180::-;1834:77;1831:1;1824:88;1931:4;1928:1;1921:15;1955:4;1952:1;1945:15;1972:194;2012:4;2032:20;2050:1;2032:20;:::i;:::-;2027:25;;2066:20;2084:1;2066:20;:::i;:::-;2061:25;;2110:1;2107;2103:9;2095:17;;2134:1;2128:4;2125:11;2122:37;;;2139:18;;:::i;:::-;2122:37;1972:194;;;;:::o;2172:180::-;2220:77;2217:1;2210:88;2317:4;2314:1;2307:15;2341:4;2338:1;2331:15;2358:185;2398:1;2415:20;2433:1;2415:20;:::i;:::-;2410:25;;2449:20;2467:1;2449:20;:::i;:::-;2444:25;;2488:1;2478:35;;2493:18;;:::i;:::-;2478:35;2535:1;2532;2528:9;2523:14;;2358:185;;;;:::o;2549:233::-;2588:3;2611:24;2629:5;2611:24;:::i;:::-;2602:33;;2657:66;2650:5;2647:77;2644:103;;2727:18;;:::i;:::-;2644:103;2774:1;2767:5;2763:13;2756:20;;2549:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "173400",
								"executionCost": "27340",
								"totalCost": "200740"
							},
							"external": {
								"blockValue()": "2451",
								"consecutiveWins()": "2429",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 778,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 778,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 778,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 151,
									"end": 228,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 228,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 134,
									"end": 228,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 263,
									"end": 307,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 263,
									"end": 307,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 263,
									"end": 307,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 263,
									"end": 307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 263,
									"end": 307,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 263,
									"end": 307,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 263,
									"end": 307,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 263,
									"end": 307,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 263,
									"end": 307,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 263,
									"end": 307,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 263,
									"end": 307,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 301,
									"end": 302,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 298,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 283,
									"end": 302,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 283,
									"end": 302,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 283,
									"end": 302,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 283,
									"end": 302,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 778,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 778,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 778,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 778,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 778,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 778,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 778,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c2278a291ea7d4b55f1178933139dd657ec183c5eb1908b762080ed2809d59b964736f6c63430008120033",
									".code": [
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "F852BE69"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 311,
											"end": 776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 311,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 311,
											"end": 776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 311,
											"end": 776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 311,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 311,
											"end": 776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 311,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 311,
											"end": 776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 311,
											"end": 776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 311,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 311,
											"end": 776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 80,
											"end": 110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 80,
											"end": 110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 233,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 233,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 311,
											"end": 776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 397,
											"end": 409,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 397,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 397,
											"end": 413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 397,
											"end": 413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 413,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 387,
											"end": 414,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 379,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 415,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 366,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 366,
											"end": 415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 415,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 366,
											"end": 415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 482,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 482,
											"end": 492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 470,
											"end": 478,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 466,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 466,
											"end": 517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 502,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 466,
											"end": 517,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 466,
											"end": 517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 534,
											"end": 544,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 534,
											"end": 544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 523,
											"end": 531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 523,
											"end": 544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 523,
											"end": 544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 544,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 523,
											"end": 544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 582,
											"end": 588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 569,
											"end": 579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 569,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 569,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 569,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 569,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 569,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 569,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 569,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 606,
											"end": 614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 606,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 606,
											"end": 634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 606,
											"end": 634,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 634,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 606,
											"end": 634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 622,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 606,
											"end": 634,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 606,
											"end": 634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 645,
											"end": 649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 641,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 641,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 669,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 669,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 669,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 669,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 669,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 694,
											"end": 705,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 694,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 694,
											"end": 705,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 641,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 744,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 726,
											"end": 745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 726,
											"end": 745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 726,
											"end": 745,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 726,
											"end": 745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 760,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 765,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 753,
											"end": 765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 753,
											"end": 765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 753,
											"end": 765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 311,
											"end": 776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 311,
											"end": 776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 397,
											"end": 418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 500,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 522,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 480,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 620,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 611,
											"end": 640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 611,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 649,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 747,
											"end": 753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 775,
											"end": 782,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 771,
											"end": 794,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 767,
											"end": 799,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 764,
											"end": 883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 764,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 802,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 802,
											"end": 881,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 764,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 922,
											"end": 923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 989,
											"end": 996,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 969,
											"end": 978,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 965,
											"end": 987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 947,
											"end": 997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 947,
											"end": 997,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 937,
											"end": 997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 937,
											"end": 997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 893,
											"end": 1007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1116,
											"end": 1121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1101,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1249,
											"end": 1258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1333,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1273,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1539,
											"end": 1544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1521,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1752,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1702,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1966,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1921,
											"end": 1936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1959,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1952,
											"end": 1953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1960,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2050,
											"end": 2051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2032,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2052,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2084,
											"end": 2085,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2066,
											"end": 2086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2136,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 2166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2172,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2297,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2345,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2331,
											"end": 2346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2433,
											"end": 2434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2415,
											"end": 2435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2435,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2415,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2467,
											"end": 2468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2449,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2478,
											"end": 2513,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2493,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2513,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2478,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2537,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2723,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2650,
											"end": 2655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2724,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2644,
											"end": 2747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2747,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2644,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"coinFlip.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"blockValue()": "f852be69",
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"blockValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"coinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"coinFlip.sol\":{\"keccak256\":\"0x00a99d90c126d5b403bf687f0fb3a30ca46cd6fe344549e0525158ecf6faebd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e29c21c5d6e598ef95e9192ade3cb33bfbdfe41e8ad4d3532b27107b1897d7b3\",\"dweb:/ipfs/QmTiuQczhDFMjX6PH6pyDzSWsRpRKLqtyjTAUfWYHyLsFG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "coinFlip.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "coinFlip.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "coinFlip.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 10,
								"contract": "coinFlip.sol:CoinFlip",
								"label": "blockValue",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"coinFlip.sol": {
				"ast": {
					"absolutePath": "coinFlip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							83
						]
					},
					"id": 84,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlip",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 83,
							"linearizedBaseContracts": [
								83
							],
							"name": "CoinFlip",
							"nameLocation": "66:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 3,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nameLocation": "95:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 83,
									"src": "80:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "80:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "122:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 83,
									"src": "114:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "114:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "142:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 83,
									"src": "134:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "134:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "151:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "f852be69",
									"id": 10,
									"mutability": "mutable",
									"name": "blockValue",
									"nameLocation": "249:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 83,
									"src": "233:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "277:30:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "283:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "301:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "283:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "283:19:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:0:0"
									},
									"scope": 83,
									"src": "263:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "360:416:0",
										"statements": [
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "366:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 29,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "397:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 30,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "403:6:0",
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "397:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 31,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "412:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "397:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 28,
																	"name": "blockhash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967291,
																	"src": "387:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																		"typeString": "function (uint256) view returns (bytes32)"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "387:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "379:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 26,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "379:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "379:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "366:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "366:49:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 37,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "470:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 38,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "482:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "470:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "466:51:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "494:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 40,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "502:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "502:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "ExpressionStatement",
															"src": "502:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 45,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "523:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 46,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "534:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "523:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "523:21:0"
											},
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "558:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 81,
														"src": "550:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 49,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "550:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 51,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "569:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 52,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "582:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "569:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "550:38:0"
											},
											{
												"assignments": [
													56
												],
												"declarations": [
													{
														"constant": false,
														"id": 56,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "599:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 81,
														"src": "594:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 55,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "594:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 57,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "606:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "606:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "629:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "606:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "622:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "594:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 64,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "645:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 65,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "653:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "645:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 79,
													"nodeType": "Block",
													"src": "718:54:0",
													"statements": [
														{
															"expression": {
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 73,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "726:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "744:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "726:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 76,
															"nodeType": "ExpressionStatement",
															"src": "726:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "760:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 24,
															"id": 78,
															"nodeType": "Return",
															"src": "753:12:0"
														}
													]
												},
												"id": 80,
												"nodeType": "IfStatement",
												"src": "641:131:0",
												"trueBody": {
													"id": 72,
													"nodeType": "Block",
													"src": "661:51:0",
													"statements": [
														{
															"expression": {
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "669:17:0",
																"subExpression": {
																	"id": 67,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "669:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 69,
															"nodeType": "ExpressionStatement",
															"src": "669:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "701:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 24,
															"id": 71,
															"nodeType": "Return",
															"src": "694:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "320:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "_guess",
												"nameLocation": "330:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "325:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:13:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "354:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "354:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:6:0"
									},
									"scope": 83,
									"src": "311:465:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 84,
							"src": "57:721:0",
							"usedErrors": []
						}
					],
					"src": "32:746:0"
				},
				"id": 0
			}
		}
	}
}